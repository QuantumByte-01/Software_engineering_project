{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Swastik R\\\\Downloads\\\\Software_engineering_project-Development\\\\Software_engineering_project-Development\\\\src\\\\views\\\\threed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeDModelViewer = ({\n  modelUrl\n}) => {\n  _s();\n  const containerRef = useRef(null); // Ref for the container\n  const modelRef = useRef(null); // Ref for the model\n  const keyControls = useRef({\n    autoRotate: false,\n    wireframe: false\n  }); // Ref for key controls\n  const [instructionsVisible, setInstructionsVisible] = useState(false); // State for instructions\n\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.outputColorSpace = THREE.SRGBColorSpace;\n    renderer.setSize(containerRef.current.clientWidth, containerRef.current.clientHeight);\n    renderer.setClearColor(0x000000);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    containerRef.current.appendChild(renderer.domElement);\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(45, containerRef.current.clientWidth / containerRef.current.clientHeight, 1, 1000);\n    camera.position.set(0, 10, 20);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05; // Smoother damping\n    controls.enablePan = true; // Enable panning\n    controls.enableZoom = true;\n    controls.zoomSpeed = 1.0;\n    controls.rotateSpeed = 0.8; // Adjusted for smoother rotation\n    controls.panSpeed = 0.8; // Adjusted pan speed\n    controls.minDistance = 5;\n    controls.maxDistance = 50;\n    controls.minPolarAngle = 0; // Allow full vertical rotation\n    controls.maxPolarAngle = Math.PI; // Allow full vertical rotation\n    controls.autoRotate = false;\n    controls.target.set(0, 0, 0);\n    const spotLight = new THREE.SpotLight(0xffffff, 3000, 200, 0.5, 0.5);\n    spotLight.position.set(10, 30, 10);\n    spotLight.castShadow = true;\n    spotLight.shadow.bias = -0.0001;\n    spotLight.shadow.mapSize.width = 2048;\n    spotLight.shadow.mapSize.height = 2048;\n    scene.add(spotLight);\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n    const loader = new GLTFLoader().setPath('public/a_low_poly_house/');\n    loader.load('scene.gltf', gltf => {\n      console.log('loading model');\n      const mesh = gltf.scene;\n      modelRef.current = mesh;\n      const box = new THREE.Box3().setFromObject(mesh);\n      const center = box.getCenter(new THREE.Vector3());\n      mesh.position.sub(center);\n      mesh.traverse(child => {\n        if (child.isMesh) {\n          child.castShadow = true;\n          child.receiveShadow = true;\n        }\n      });\n      scene.add(mesh);\n      const size = box.getSize(new THREE.Vector3());\n      const maxDim = Math.max(size.x, size.y, size.z);\n      const fov = camera.fov * (Math.PI / 180);\n      let cameraZ = Math.abs(maxDim / Math.tan(fov / 2) * 3);\n      camera.position.set(0, maxDim, cameraZ);\n      camera.lookAt(0, 0, 0);\n      controls.target.set(0, 0, 0);\n      controls.update();\n      document.getElementById('progress-container').style.display = 'none';\n    }, xhr => {\n      console.log(`loading ${xhr.loaded / xhr.total * 100}%`);\n    }, error => {\n      console.error(error);\n    });\n\n    // Keyboard controls\n    const handleKeyDown = event => {\n      switch (event.code) {\n        case 'Space':\n          keyControls.current.autoRotate = !keyControls.current.autoRotate;\n          controls.autoRotate = keyControls.current.autoRotate;\n          if (!instructionsVisible) {\n            setInstructionsVisible(true);\n            setTimeout(() => setInstructionsVisible(false), 3000); // Show instructions for 3 seconds\n          }\n          break;\n        case 'KeyW':\n          if (modelRef.current) {\n            keyControls.current.wireframe = !keyControls.current.wireframe;\n            modelRef.current.traverse(child => {\n              if (child.isMesh) {\n                child.material.wireframe = keyControls.current.wireframe;\n              }\n            });\n            if (!instructionsVisible) {\n              setInstructionsVisible(true);\n              setTimeout(() => setInstructionsVisible(false), 3000); // Show instructions for 3 seconds\n            }\n          }\n          break;\n        case 'KeyR':\n          // Reset camera position\n          camera.position.set(0, 10, 20);\n          controls.target.set(0, 0, 0);\n          controls.autoRotate = false;\n          keyControls.current.autoRotate = false;\n          controls.update();\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    const handleResize = () => {\n      camera.aspect = containerRef.current.clientWidth / containerRef.current.clientHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(containerRef.current.clientWidth, containerRef.current.clientHeight);\n      controls.update();\n    };\n    window.addEventListener('resize', handleResize);\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('resize', handleResize);\n      renderer.dispose();\n    };\n  }, [modelUrl, instructionsVisible]); // Add instructionsVisible to dependencies\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"model-viewer\",\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), instructionsVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions\",\n      style: {\n        position: 'absolute',\n        top: '10px',\n        left: '10px',\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\n        padding: '10px',\n        borderRadius: '5px',\n        boxShadow: '0 2px 10px rgba(0, 0, 0, 0.2)',\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Left Click: Rotate Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Right Click: Context Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"W: Toggle Wireframe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Space: Toggle Auto-Rotate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n};\n_s(ThreeDModelViewer, \"dQ9z3yAKv0pObF76gubSpA0DA+s=\");\n_c = ThreeDModelViewer;\nexport default ThreeDModelViewer;\nvar _c;\n$RefreshReg$(_c, \"ThreeDModelViewer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","THREE","GLTFLoader","OrbitControls","jsxDEV","_jsxDEV","ThreeDModelViewer","modelUrl","_s","containerRef","modelRef","keyControls","autoRotate","wireframe","instructionsVisible","setInstructionsVisible","current","renderer","WebGLRenderer","antialias","outputColorSpace","SRGBColorSpace","setSize","clientWidth","clientHeight","setClearColor","setPixelRatio","window","devicePixelRatio","shadowMap","enabled","type","PCFSoftShadowMap","appendChild","domElement","scene","Scene","camera","PerspectiveCamera","position","set","controls","enableDamping","dampingFactor","enablePan","enableZoom","zoomSpeed","rotateSpeed","panSpeed","minDistance","maxDistance","minPolarAngle","maxPolarAngle","Math","PI","target","spotLight","SpotLight","castShadow","shadow","bias","mapSize","width","height","add","ambientLight","AmbientLight","loader","setPath","load","gltf","console","log","mesh","box","Box3","setFromObject","center","getCenter","Vector3","sub","traverse","child","isMesh","receiveShadow","size","getSize","maxDim","max","x","y","z","fov","cameraZ","abs","tan","lookAt","update","document","getElementById","style","display","xhr","loaded","total","error","handleKeyDown","event","code","setTimeout","material","addEventListener","handleResize","aspect","updateProjectionMatrix","animate","requestAnimationFrame","render","removeEventListener","dispose","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","top","left","backgroundColor","padding","borderRadius","boxShadow","zIndex","_c","$RefreshReg$"],"sources":["C:/Users/Swastik R/Downloads/Software_engineering_project-Development/Software_engineering_project-Development/src/views/threed.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nconst ThreeDModelViewer = ({ modelUrl }) => {\n    const containerRef = useRef(null); // Ref for the container\n    const modelRef = useRef(null); // Ref for the model\n    const keyControls = useRef({ autoRotate: false, wireframe: false }); // Ref for key controls\n    const [instructionsVisible, setInstructionsVisible] = useState(false); // State for instructions\n\n    useEffect(() => {\n        if (!containerRef.current) return;\n\n        const renderer = new THREE.WebGLRenderer({ antialias: true });\n        renderer.outputColorSpace = THREE.SRGBColorSpace;\n        renderer.setSize(containerRef.current.clientWidth, containerRef.current.clientHeight);\n        renderer.setClearColor(0x000000);\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.shadowMap.enabled = true;\n        renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n        containerRef.current.appendChild(renderer.domElement);\n\n        const scene = new THREE.Scene();\n        const camera = new THREE.PerspectiveCamera(\n            45,\n            containerRef.current.clientWidth / containerRef.current.clientHeight,\n            1,\n            1000\n        );\n        camera.position.set(0, 10, 20);\n\n        const controls = new OrbitControls(camera, renderer.domElement);\n        controls.enableDamping = true;\n        controls.dampingFactor = 0.05; // Smoother damping\n        controls.enablePan = true; // Enable panning\n        controls.enableZoom = true;\n        controls.zoomSpeed = 1.0;\n        controls.rotateSpeed = 0.8; // Adjusted for smoother rotation\n        controls.panSpeed = 0.8; // Adjusted pan speed\n        controls.minDistance = 5;\n        controls.maxDistance = 50;\n        controls.minPolarAngle = 0; // Allow full vertical rotation\n        controls.maxPolarAngle = Math.PI; // Allow full vertical rotation\n        controls.autoRotate = false;\n        controls.target.set(0, 0, 0);\n\n        const spotLight = new THREE.SpotLight(0xffffff, 3000, 200, 0.5, 0.5);\n        spotLight.position.set(10, 30, 10);\n        spotLight.castShadow = true;\n        spotLight.shadow.bias = -0.0001;\n        spotLight.shadow.mapSize.width = 2048;\n        spotLight.shadow.mapSize.height = 2048;\n        scene.add(spotLight);\n\n        const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n        scene.add(ambientLight);\n        \n        const loader = new GLTFLoader().setPath('public/a_low_poly_house/');\n        loader.load(\n            'scene.gltf',\n            (gltf) => {\n                console.log('loading model');\n                const mesh = gltf.scene;\n                modelRef.current = mesh;\n                \n                const box = new THREE.Box3().setFromObject(mesh);\n                const center = box.getCenter(new THREE.Vector3());\n                mesh.position.sub(center);\n                \n                mesh.traverse((child) => {\n                    if (child.isMesh) {\n                        child.castShadow = true;\n                        child.receiveShadow = true;\n                    }\n                });\n                \n                scene.add(mesh);\n                \n                const size = box.getSize(new THREE.Vector3());\n                const maxDim = Math.max(size.x, size.y, size.z);\n                const fov = camera.fov * (Math.PI / 180);\n                let cameraZ = Math.abs(maxDim / Math.tan(fov / 2) * 3);\n                \n                camera.position.set(0, maxDim, cameraZ);\n                camera.lookAt(0, 0, 0);\n                \n                controls.target.set(0, 0, 0);\n                controls.update();\n                \n                document.getElementById('progress-container').style.display = 'none';\n            },\n            (xhr) => {\n                console.log(`loading ${xhr.loaded / xhr.total * 100}%`);\n            },\n            (error) => {\n                console.error(error);\n            }\n        );\n\n        // Keyboard controls\n        const handleKeyDown = (event) => {\n            switch(event.code) {\n                case 'Space':\n                    keyControls.current.autoRotate = !keyControls.current.autoRotate;\n                    controls.autoRotate = keyControls.current.autoRotate;\n                    if (!instructionsVisible) {\n                        setInstructionsVisible(true);\n                        setTimeout(() => setInstructionsVisible(false), 3000); // Show instructions for 3 seconds\n                    }\n                    break;\n                case 'KeyW':\n                    if (modelRef.current) {\n                        keyControls.current.wireframe = !keyControls.current.wireframe;\n                        modelRef.current.traverse((child) => {\n                            if (child.isMesh) {\n                                child.material.wireframe = keyControls.current.wireframe;\n                            }\n                        });\n                        if (!instructionsVisible) {\n                            setInstructionsVisible(true);\n                            setTimeout(() => setInstructionsVisible(false), 3000); // Show instructions for 3 seconds\n                        }\n                    }\n                    break;\n                case 'KeyR':\n                    // Reset camera position\n                    camera.position.set(0, 10, 20);\n                    controls.target.set(0, 0, 0);\n                    controls.autoRotate = false;\n                    keyControls.current.autoRotate = false;\n                    controls.update();\n                    break;\n            }\n        };\n\n        window.addEventListener('keydown', handleKeyDown);\n\n        const handleResize = () => {\n            camera.aspect = containerRef.current.clientWidth / containerRef.current.clientHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize(containerRef.current.clientWidth, containerRef.current.clientHeight);\n            controls.update();\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        const animate = () => {\n            requestAnimationFrame(animate);\n            controls.update();\n            renderer.render(scene, camera);\n        };\n\n        animate();\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n            window.removeEventListener('resize', handleResize);\n            renderer.dispose();\n        };\n    }, [modelUrl, instructionsVisible]); // Add instructionsVisible to dependencies\n\n    return (\n        <div>\n            <div ref={containerRef} className=\"model-viewer\" style={{ width: '100%', height: '100%' }} />\n            {instructionsVisible && (\n                <div className=\"instructions\" style={{\n                    position: 'absolute',\n                    top: '10px',\n                    left: '10px',\n                    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n                    padding: '10px',\n                    borderRadius: '5px',\n                    boxShadow: '0 2px 10px rgba(0, 0, 0, 0.2)',\n                    zIndex: 10,\n                }}>\n                    <p>Left Click: Rotate Model</p>\n                    <p>Right Click: Context Menu</p>\n                    <p>W: Toggle Wireframe</p>\n                    <p>Space: Toggle Auto-Rotate</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ThreeDModelViewer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}