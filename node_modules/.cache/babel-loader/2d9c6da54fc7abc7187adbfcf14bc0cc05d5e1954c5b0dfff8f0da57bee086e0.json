{"ast":null,"code":"import * as THREE from 'three';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\nconst renderer = new THREE.WebGLRenderer({\n  antialias: true\n});\nrenderer.outputColorSpace = THREE.SRGBColorSpace;\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.setClearColor(0x000000);\nrenderer.setPixelRatio(window.devicePixelRatio);\nrenderer.shadowMap.enabled = true;\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap;\ndocument.body.appendChild(renderer.domElement);\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 1000);\ncamera.position.set(0, 10, 20);\n\n// Enhanced OrbitControls\nconst controls = new OrbitControls(camera, renderer.domElement);\ncontrols.enableDamping = true;\ncontrols.dampingFactor = 0.05; // Smoother damping\ncontrols.enablePan = true; // Enable panning\ncontrols.enableZoom = true;\ncontrols.zoomSpeed = 1.0;\ncontrols.rotateSpeed = 0.8; // Adjusted for smoother rotation\ncontrols.panSpeed = 0.8; // Adjusted pan speed\ncontrols.minDistance = 5;\ncontrols.maxDistance = 50;\ncontrols.minPolarAngle = 0; // Allow full vertical rotation\ncontrols.maxPolarAngle = Math.PI; // Allow full vertical rotation\ncontrols.autoRotate = false;\ncontrols.target.set(0, 0, 0);\ncontrols.update();\n\n// Add key controls for additional features\nconst keyControls = {\n  autoRotate: false,\n  autoRotateSpeed: 2.0,\n  wireframe: false\n};\n\n// UI for controls\nconst createUI = () => {\n  const ui = document.createElement('div');\n  ui.style.position = 'absolute';\n  ui.style.top = '10px';\n  ui.style.left = '10px';\n  ui.style.backgroundColor = 'rgba(0,0,0,0.7)';\n  ui.style.padding = '10px';\n  ui.style.borderRadius = '5px';\n  ui.style.color = 'white';\n  ui.style.fontFamily = 'Arial';\n  ui.innerHTML = `\n        <div style=\"margin-bottom: 10px;\">Controls:</div>\n        <div style=\"margin-bottom: 5px\">Left Click: Rotate</div>\n        <div style=\"margin-bottom: 5px\">Right Click: Pan</div>\n        <div style=\"margin-bottom: 5px\">Scroll: Zoom</div>\n        <div style=\"margin-bottom: 5px\">Space: Toggle Auto-Rotate</div>\n        <div style=\"margin-bottom: 5px\">W: Toggle Wireframe</div>\n        <div style=\"margin-bottom: 5px\">R: Reset View</div>\n    `;\n  document.body.appendChild(ui);\n};\ncreateUI();\nconst spotLight = new THREE.SpotLight(0xffffff, 5000, 200, 0.5, 0.5);\nspotLight.position.set(10, 30, 10);\nspotLight.castShadow = true;\nspotLight.shadow.bias = -0.0001;\nspotLight.shadow.mapSize.width = 2048;\nspotLight.shadow.mapSize.height = 2048;\nscene.add(spotLight);\nconst ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\nscene.add(ambientLight);\nlet modelRef; // Store reference to the loaded model\n\nconst loader = new GLTFLoader().setPath('public/a_low_poly_house/');\nloader.load('scene.gltf', gltf => {\n  console.log('loading model');\n  const mesh = gltf.scene;\n  modelRef = mesh;\n  const box = new THREE.Box3().setFromObject(mesh);\n  const center = box.getCenter(new THREE.Vector3());\n  mesh.position.sub(center);\n  mesh.traverse(child => {\n    if (child.isMesh) {\n      child.castShadow = true;\n      child.receiveShadow = true;\n    }\n  });\n  scene.add(mesh);\n  const size = box.getSize(new THREE.Vector3());\n  const maxDim = Math.max(size.x, size.y, size.z);\n  const fov = camera.fov * (Math.PI / 180);\n  let cameraZ = Math.abs(maxDim / Math.tan(fov / 2) * 3);\n  camera.position.set(0, maxDim, cameraZ);\n  camera.lookAt(0, 0, 0);\n  controls.target.set(0, 0, 0);\n  controls.update();\n  document.getElementById('progress-container').style.display = 'none';\n}, xhr => {\n  console.log(`loading ${xhr.loaded / xhr.total * 100}%`);\n}, error => {\n  console.error(error);\n});\n\n// Keyboard controls\nwindow.addEventListener('keydown', event => {\n  switch (event.code) {\n    case 'Space':\n      keyControls.autoRotate = !keyControls.autoRotate;\n      controls.autoRotate = keyControls.autoRotate;\n      break;\n    case 'KeyW':\n      if (modelRef) {\n        keyControls.wireframe = !keyControls.wireframe;\n        modelRef.traverse(child => {\n          if (child.isMesh) {\n            child.material.wireframe = keyControls.wireframe;\n          }\n        });\n      }\n      break;\n    case 'KeyR':\n      // Reset camera position\n      camera.position.set(0, 10, 20);\n      controls.target.set(0, 0, 0);\n      controls.autoRotate = false;\n      keyControls.autoRotate = false;\n      controls.update();\n      break;\n  }\n});\n\n// Enhanced window resize handling\nconst handleResize = () => {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  controls.update();\n};\nwindow.addEventListener('resize', handleResize);\nfunction animate() {\n  requestAnimationFrame(animate);\n  controls.update();\n  renderer.render(scene, camera);\n}\nanimate();","map":{"version":3,"names":["THREE","GLTFLoader","OrbitControls","renderer","WebGLRenderer","antialias","outputColorSpace","SRGBColorSpace","setSize","window","innerWidth","innerHeight","setClearColor","setPixelRatio","devicePixelRatio","shadowMap","enabled","type","PCFSoftShadowMap","document","body","appendChild","domElement","scene","Scene","camera","PerspectiveCamera","position","set","controls","enableDamping","dampingFactor","enablePan","enableZoom","zoomSpeed","rotateSpeed","panSpeed","minDistance","maxDistance","minPolarAngle","maxPolarAngle","Math","PI","autoRotate","target","update","keyControls","autoRotateSpeed","wireframe","createUI","ui","createElement","style","top","left","backgroundColor","padding","borderRadius","color","fontFamily","innerHTML","spotLight","SpotLight","castShadow","shadow","bias","mapSize","width","height","add","ambientLight","AmbientLight","modelRef","loader","setPath","load","gltf","console","log","mesh","box","Box3","setFromObject","center","getCenter","Vector3","sub","traverse","child","isMesh","receiveShadow","size","getSize","maxDim","max","x","y","z","fov","cameraZ","abs","tan","lookAt","getElementById","display","xhr","loaded","total","error","addEventListener","event","code","material","handleResize","aspect","updateProjectionMatrix","animate","requestAnimationFrame","render"],"sources":["C:/Users/Swastik R/Downloads/Software_engineering_project-Development/Software_engineering_project-Development/src/views/ThreeDModelViewer.js"],"sourcesContent":["import * as THREE from 'three';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n\nconst renderer = new THREE.WebGLRenderer({ antialias: true });\nrenderer.outputColorSpace = THREE.SRGBColorSpace;\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.setClearColor(0x000000);\nrenderer.setPixelRatio(window.devicePixelRatio);\nrenderer.shadowMap.enabled = true;\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap;\ndocument.body.appendChild(renderer.domElement);\n\nconst scene = new THREE.Scene();\n\nconst camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 1000);\ncamera.position.set(0, 10, 20);\n\n// Enhanced OrbitControls\nconst controls = new OrbitControls(camera, renderer.domElement);\ncontrols.enableDamping = true;\ncontrols.dampingFactor = 0.05; // Smoother damping\ncontrols.enablePan = true; // Enable panning\ncontrols.enableZoom = true;\ncontrols.zoomSpeed = 1.0;\ncontrols.rotateSpeed = 0.8; // Adjusted for smoother rotation\ncontrols.panSpeed = 0.8; // Adjusted pan speed\ncontrols.minDistance = 5;\ncontrols.maxDistance = 50;\ncontrols.minPolarAngle = 0; // Allow full vertical rotation\ncontrols.maxPolarAngle = Math.PI; // Allow full vertical rotation\ncontrols.autoRotate = false;\ncontrols.target.set(0, 0, 0);\ncontrols.update();\n\n// Add key controls for additional features\nconst keyControls = {\n    autoRotate: false,\n    autoRotateSpeed: 2.0,\n    wireframe: false\n};\n\n// UI for controls\nconst createUI = () => {\n    const ui = document.createElement('div');\n    ui.style.position = 'absolute';\n    ui.style.top = '10px';\n    ui.style.left = '10px';\n    ui.style.backgroundColor = 'rgba(0,0,0,0.7)';\n    ui.style.padding = '10px';\n    ui.style.borderRadius = '5px';\n    ui.style.color = 'white';\n    ui.style.fontFamily = 'Arial';\n    ui.innerHTML = `\n        <div style=\"margin-bottom: 10px;\">Controls:</div>\n        <div style=\"margin-bottom: 5px\">Left Click: Rotate</div>\n        <div style=\"margin-bottom: 5px\">Right Click: Pan</div>\n        <div style=\"margin-bottom: 5px\">Scroll: Zoom</div>\n        <div style=\"margin-bottom: 5px\">Space: Toggle Auto-Rotate</div>\n        <div style=\"margin-bottom: 5px\">W: Toggle Wireframe</div>\n        <div style=\"margin-bottom: 5px\">R: Reset View</div>\n    `;\n    document.body.appendChild(ui);\n};\n\ncreateUI();\n\nconst spotLight = new THREE.SpotLight(0xffffff, 5000, 200, 0.5, 0.5);\nspotLight.position.set(10, 30, 10);\nspotLight.castShadow = true;\nspotLight.shadow.bias = -0.0001;\nspotLight.shadow.mapSize.width = 2048;\nspotLight.shadow.mapSize.height = 2048;\nscene.add(spotLight);\n\nconst ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\nscene.add(ambientLight);\n\nlet modelRef; // Store reference to the loaded model\n\nconst loader = new GLTFLoader().setPath('public/a_low_poly_house/');\nloader.load('scene.gltf', \n    (gltf) => {\n        console.log('loading model');\n        const mesh = gltf.scene;\n        modelRef = mesh;\n        \n        const box = new THREE.Box3().setFromObject(mesh);\n        const center = box.getCenter(new THREE.Vector3());\n        mesh.position.sub(center);\n        \n        mesh.traverse((child) => {\n            if (child.isMesh) {\n                child.castShadow = true;\n                child.receiveShadow = true;\n            }\n        });\n        \n        scene.add(mesh);\n        \n        const size = box.getSize(new THREE.Vector3());\n        const maxDim = Math.max(size.x, size.y, size.z);\n        const fov = camera.fov * (Math.PI / 180);\n        let cameraZ = Math.abs(maxDim / Math.tan(fov / 2) * 3);\n        \n        camera.position.set(0, maxDim, cameraZ);\n        camera.lookAt(0, 0, 0);\n        \n        controls.target.set(0, 0, 0);\n        controls.update();\n        \n        document.getElementById('progress-container').style.display = 'none';\n    },\n    (xhr) => {\n        console.log(`loading ${xhr.loaded / xhr.total * 100}%`);\n    },\n    (error) => {\n        console.error(error);\n    }\n);\n\n// Keyboard controls\nwindow.addEventListener('keydown', (event) => {\n    switch(event.code) {\n        case 'Space':\n            keyControls.autoRotate = !keyControls.autoRotate;\n            controls.autoRotate = keyControls.autoRotate;\n            break;\n        case 'KeyW':\n            if (modelRef) {\n                keyControls.wireframe = !keyControls.wireframe;\n                modelRef.traverse((child) => {\n                    if (child.isMesh) {\n                        child.material.wireframe = keyControls.wireframe;\n                    }\n                });\n            }\n            break;\n        case 'KeyR':\n            // Reset camera position\n            camera.position.set(0, 10, 20);\n            controls.target.set(0, 0, 0);\n            controls.autoRotate = false;\n            keyControls.autoRotate = false;\n            controls.update();\n            break;\n    }\n});\n\n// Enhanced window resize handling\nconst handleResize = () => {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    controls.update();\n};\n\nwindow.addEventListener('resize', handleResize);\n\nfunction animate() {\n    requestAnimationFrame(animate);\n    controls.update();\n    renderer.render(scene, camera);\n}\n\nanimate();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}