{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Swastik R\\\\Downloads\\\\Software_engineering_project-Development\\\\Software_engineering_project-Development\\\\src\\\\views\\\\threed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeDModelViewer = ({\n  modelUrl\n}) => {\n  _s();\n  useEffect(() => {\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.outputColorSpace = THREE.SRGBColorSpace;\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0x000000);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    document.getElementById('model-viewer-container').appendChild(renderer.domElement);\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 1000);\n    camera.position.set(0, 10, 20);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.enablePan = true;\n    controls.enableZoom = true;\n    controls.minDistance = 5;\n    controls.maxDistance = 50;\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n    const loader = new GLTFLoader();\n    loader.load(modelUrl, gltf => {\n      const mesh = gltf.scene;\n      scene.add(mesh);\n      const box = new THREE.Box3().setFromObject(mesh);\n      const center = box.getCenter(new THREE.Vector3());\n      mesh.position.sub(center);\n      controls.target.copy(center);\n      controls.update();\n    }, undefined, error => {\n      console.error(error);\n    });\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup on component unmount\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      renderer.dispose();\n    };\n  }, [modelUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"model-viewer-container\",\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 12\n  }, this);\n};\n_s(ThreeDModelViewer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ThreeDModelViewer;\nexport default ThreeDModelViewer;\nvar _c;\n$RefreshReg$(_c, \"ThreeDModelViewer\");","map":{"version":3,"names":["React","useEffect","THREE","GLTFLoader","OrbitControls","jsxDEV","_jsxDEV","ThreeDModelViewer","modelUrl","_s","renderer","WebGLRenderer","antialias","outputColorSpace","SRGBColorSpace","setSize","window","innerWidth","innerHeight","setClearColor","setPixelRatio","devicePixelRatio","shadowMap","enabled","type","PCFSoftShadowMap","document","getElementById","appendChild","domElement","scene","Scene","camera","PerspectiveCamera","position","set","controls","enableDamping","dampingFactor","enablePan","enableZoom","minDistance","maxDistance","ambientLight","AmbientLight","add","loader","load","gltf","mesh","box","Box3","setFromObject","center","getCenter","Vector3","sub","target","copy","update","undefined","error","console","handleResize","aspect","updateProjectionMatrix","addEventListener","animate","requestAnimationFrame","render","removeEventListener","dispose","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Swastik R/Downloads/Software_engineering_project-Development/Software_engineering_project-Development/src/views/threed.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nconst ThreeDModelViewer = ({ modelUrl }) => {\n    useEffect(() => {\n        const renderer = new THREE.WebGLRenderer({ antialias: true });\n        renderer.outputColorSpace = THREE.SRGBColorSpace;\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.setClearColor(0x000000);\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.shadowMap.enabled = true;\n        renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n        document.getElementById('model-viewer-container').appendChild(renderer.domElement);\n\n        const scene = new THREE.Scene();\n        const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 1000);\n        camera.position.set(0, 10, 20);\n\n        const controls = new OrbitControls(camera, renderer.domElement);\n        controls.enableDamping = true;\n        controls.dampingFactor = 0.05;\n        controls.enablePan = true;\n        controls.enableZoom = true;\n        controls.minDistance = 5;\n        controls.maxDistance = 50;\n\n        const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n        scene.add(ambientLight);\n\n        const loader = new GLTFLoader();\n        loader.load(modelUrl, (gltf) => {\n            const mesh = gltf.scene;\n            scene.add(mesh);\n            const box = new THREE.Box3().setFromObject(mesh);\n            const center = box.getCenter(new THREE.Vector3());\n            mesh.position.sub(center);\n            controls.target.copy(center);\n            controls.update();\n        }, undefined, (error) => {\n            console.error(error);\n        });\n\n        const handleResize = () => {\n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize(window.innerWidth, window.innerHeight);\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        const animate = () => {\n            requestAnimationFrame(animate);\n            controls.update();\n            renderer.render(scene, camera);\n        };\n\n        animate();\n\n        // Cleanup on component unmount\n        return () => {\n            window.removeEventListener('resize', handleResize);\n            renderer.dispose();\n        };\n    }, [modelUrl]);\n\n    return <div id=\"model-viewer-container\" style={{ width: '100%', height: '100%' }} />;\n};\n\nexport default ThreeDModelViewer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}