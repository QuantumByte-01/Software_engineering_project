{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Swastik R\\\\Downloads\\\\Software_engineering_project-Development\\\\Software_engineering_project-Development\\\\src\\\\views\\\\threed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeDModelViewer = ({\n  modelUrl\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    // Initialize the renderer\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.outputColorSpace = THREE.SRGBColorSpace;\n    renderer.setSize(container.clientWidth, container.clientHeight);\n    renderer.setClearColor(0x000000);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.shadowMap.enabled = true;\n    container.appendChild(renderer.domElement);\n\n    // Set up the scene\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(45, container.clientWidth / container.clientHeight, 1, 1000);\n    camera.position.set(0, 10, 20);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.enablePan = true;\n    controls.enableZoom = true;\n    controls.minDistance = 5;\n    controls.maxDistance = 50;\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n\n    // Load the model\n    const loader = new GLTFLoader();\n    loader.load(modelUrl, gltf => {\n      const mesh = gltf.scene;\n      scene.add(mesh);\n\n      // Center the model in the scene\n      const box = new THREE.Box3().setFromObject(mesh);\n      const center = box.getCenter(new THREE.Vector3());\n      mesh.position.sub(center);\n      controls.target.copy(center);\n      controls.update();\n    }, undefined, error => {\n      console.error('Error loading model:', error);\n    });\n\n    // Handle resizing\n    const handleResize = () => {\n      camera.aspect = container.clientWidth / container.clientHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(container.clientWidth, container.clientHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      controls.dispose();\n      renderer.dispose();\n      while (container.firstChild) {\n        container.removeChild(container.firstChild);\n      }\n    };\n  }, [modelUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    id: \"model-viewer-container\",\n    style: {\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(ThreeDModelViewer, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = ThreeDModelViewer;\nexport default ThreeDModelViewer;\nvar _c;\n$RefreshReg$(_c, \"ThreeDModelViewer\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","GLTFLoader","OrbitControls","jsxDEV","_jsxDEV","ThreeDModelViewer","modelUrl","_s","containerRef","container","current","renderer","WebGLRenderer","antialias","outputColorSpace","SRGBColorSpace","setSize","clientWidth","clientHeight","setClearColor","setPixelRatio","window","devicePixelRatio","shadowMap","enabled","appendChild","domElement","scene","Scene","camera","PerspectiveCamera","position","set","controls","enableDamping","dampingFactor","enablePan","enableZoom","minDistance","maxDistance","ambientLight","AmbientLight","add","loader","load","gltf","mesh","box","Box3","setFromObject","center","getCenter","Vector3","sub","target","copy","update","undefined","error","console","handleResize","aspect","updateProjectionMatrix","addEventListener","animate","requestAnimationFrame","render","removeEventListener","dispose","firstChild","removeChild","ref","id","style","width","height","overflow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Swastik R/Downloads/Software_engineering_project-Development/Software_engineering_project-Development/src/views/threed.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nconst ThreeDModelViewer = ({ modelUrl }) => {\n    const containerRef = useRef(null);\n\n    useEffect(() => {\n        const container = containerRef.current;\n        \n        if (!container) return;\n\n        // Initialize the renderer\n        const renderer = new THREE.WebGLRenderer({ antialias: true });\n        renderer.outputColorSpace = THREE.SRGBColorSpace;\n        renderer.setSize(container.clientWidth, container.clientHeight);\n        renderer.setClearColor(0x000000);\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.shadowMap.enabled = true;\n        container.appendChild(renderer.domElement);\n\n        // Set up the scene\n        const scene = new THREE.Scene();\n        const camera = new THREE.PerspectiveCamera(\n            45, container.clientWidth / container.clientHeight, 1, 1000\n        );\n        camera.position.set(0, 10, 20);\n\n        const controls = new OrbitControls(camera, renderer.domElement);\n        controls.enableDamping = true;\n        controls.dampingFactor = 0.05;\n        controls.enablePan = true;\n        controls.enableZoom = true;\n        controls.minDistance = 5;\n        controls.maxDistance = 50;\n\n        // Lighting\n        const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n        scene.add(ambientLight);\n\n        // Load the model\n        const loader = new GLTFLoader();\n        loader.load(\n            modelUrl,\n            (gltf) => {\n                const mesh = gltf.scene;\n                scene.add(mesh);\n                \n                // Center the model in the scene\n                const box = new THREE.Box3().setFromObject(mesh);\n                const center = box.getCenter(new THREE.Vector3());\n                mesh.position.sub(center);\n                controls.target.copy(center);\n                controls.update();\n            },\n            undefined,\n            (error) => {\n                console.error('Error loading model:', error);\n            }\n        );\n\n        // Handle resizing\n        const handleResize = () => {\n            camera.aspect = container.clientWidth / container.clientHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize(container.clientWidth, container.clientHeight);\n        };\n        window.addEventListener('resize', handleResize);\n\n        // Animation loop\n        const animate = () => {\n            requestAnimationFrame(animate);\n            controls.update();\n            renderer.render(scene, camera);\n        };\n        animate();\n\n        // Cleanup\n        return () => {\n            window.removeEventListener('resize', handleResize);\n            controls.dispose();\n            renderer.dispose();\n            while (container.firstChild) {\n                container.removeChild(container.firstChild);\n            }\n        };\n    }, [modelUrl]);\n\n    return (\n        <div\n            ref={containerRef}\n            id=\"model-viewer-container\"\n            style={{ width: '100%', height: '100%', overflow: 'hidden' }}\n        />\n    );\n};\n\nexport default ThreeDModelViewer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,uCAAuC;AAClE,SAASC,aAAa,QAAQ,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,YAAY,GAAGT,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAGD,YAAY,CAACE,OAAO;IAEtC,IAAI,CAACD,SAAS,EAAE;;IAEhB;IACA,MAAME,QAAQ,GAAG,IAAIX,KAAK,CAACY,aAAa,CAAC;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAC7DF,QAAQ,CAACG,gBAAgB,GAAGd,KAAK,CAACe,cAAc;IAChDJ,QAAQ,CAACK,OAAO,CAACP,SAAS,CAACQ,WAAW,EAAER,SAAS,CAACS,YAAY,CAAC;IAC/DP,QAAQ,CAACQ,aAAa,CAAC,QAAQ,CAAC;IAChCR,QAAQ,CAACS,aAAa,CAACC,MAAM,CAACC,gBAAgB,CAAC;IAC/CX,QAAQ,CAACY,SAAS,CAACC,OAAO,GAAG,IAAI;IACjCf,SAAS,CAACgB,WAAW,CAACd,QAAQ,CAACe,UAAU,CAAC;;IAE1C;IACA,MAAMC,KAAK,GAAG,IAAI3B,KAAK,CAAC4B,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAI7B,KAAK,CAAC8B,iBAAiB,CACtC,EAAE,EAAErB,SAAS,CAACQ,WAAW,GAAGR,SAAS,CAACS,YAAY,EAAE,CAAC,EAAE,IAC3D,CAAC;IACDW,MAAM,CAACE,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAE9B,MAAMC,QAAQ,GAAG,IAAI/B,aAAa,CAAC2B,MAAM,EAAElB,QAAQ,CAACe,UAAU,CAAC;IAC/DO,QAAQ,CAACC,aAAa,GAAG,IAAI;IAC7BD,QAAQ,CAACE,aAAa,GAAG,IAAI;IAC7BF,QAAQ,CAACG,SAAS,GAAG,IAAI;IACzBH,QAAQ,CAACI,UAAU,GAAG,IAAI;IAC1BJ,QAAQ,CAACK,WAAW,GAAG,CAAC;IACxBL,QAAQ,CAACM,WAAW,GAAG,EAAE;;IAEzB;IACA,MAAMC,YAAY,GAAG,IAAIxC,KAAK,CAACyC,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC;IAC1Dd,KAAK,CAACe,GAAG,CAACF,YAAY,CAAC;;IAEvB;IACA,MAAMG,MAAM,GAAG,IAAI1C,UAAU,CAAC,CAAC;IAC/B0C,MAAM,CAACC,IAAI,CACPtC,QAAQ,EACPuC,IAAI,IAAK;MACN,MAAMC,IAAI,GAAGD,IAAI,CAAClB,KAAK;MACvBA,KAAK,CAACe,GAAG,CAACI,IAAI,CAAC;;MAEf;MACA,MAAMC,GAAG,GAAG,IAAI/C,KAAK,CAACgD,IAAI,CAAC,CAAC,CAACC,aAAa,CAACH,IAAI,CAAC;MAChD,MAAMI,MAAM,GAAGH,GAAG,CAACI,SAAS,CAAC,IAAInD,KAAK,CAACoD,OAAO,CAAC,CAAC,CAAC;MACjDN,IAAI,CAACf,QAAQ,CAACsB,GAAG,CAACH,MAAM,CAAC;MACzBjB,QAAQ,CAACqB,MAAM,CAACC,IAAI,CAACL,MAAM,CAAC;MAC5BjB,QAAQ,CAACuB,MAAM,CAAC,CAAC;IACrB,CAAC,EACDC,SAAS,EACRC,KAAK,IAAK;MACPC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CACJ,CAAC;;IAED;IACA,MAAME,YAAY,GAAGA,CAAA,KAAM;MACvB/B,MAAM,CAACgC,MAAM,GAAGpD,SAAS,CAACQ,WAAW,GAAGR,SAAS,CAACS,YAAY;MAC9DW,MAAM,CAACiC,sBAAsB,CAAC,CAAC;MAC/BnD,QAAQ,CAACK,OAAO,CAACP,SAAS,CAACQ,WAAW,EAAER,SAAS,CAACS,YAAY,CAAC;IACnE,CAAC;IACDG,MAAM,CAAC0C,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;;IAE/C;IACA,MAAMI,OAAO,GAAGA,CAAA,KAAM;MAClBC,qBAAqB,CAACD,OAAO,CAAC;MAC9B/B,QAAQ,CAACuB,MAAM,CAAC,CAAC;MACjB7C,QAAQ,CAACuD,MAAM,CAACvC,KAAK,EAAEE,MAAM,CAAC;IAClC,CAAC;IACDmC,OAAO,CAAC,CAAC;;IAET;IACA,OAAO,MAAM;MACT3C,MAAM,CAAC8C,mBAAmB,CAAC,QAAQ,EAAEP,YAAY,CAAC;MAClD3B,QAAQ,CAACmC,OAAO,CAAC,CAAC;MAClBzD,QAAQ,CAACyD,OAAO,CAAC,CAAC;MAClB,OAAO3D,SAAS,CAAC4D,UAAU,EAAE;QACzB5D,SAAS,CAAC6D,WAAW,CAAC7D,SAAS,CAAC4D,UAAU,CAAC;MAC/C;IACJ,CAAC;EACL,CAAC,EAAE,CAAC/D,QAAQ,CAAC,CAAC;EAEd,oBACIF,OAAA;IACImE,GAAG,EAAE/D,YAAa;IAClBgE,EAAE,EAAC,wBAAwB;IAC3BC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAS;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEV,CAAC;AAACzE,EAAA,CA3FIF,iBAAiB;AAAA4E,EAAA,GAAjB5E,iBAAiB;AA6FvB,eAAeA,iBAAiB;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}