{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Swastik R\\\\Downloads\\\\Software_engineering_project-Development\\\\Software_engineering_project-Development\\\\src\\\\views\\\\model.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, Fragment } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport Navbar from '../components/navbar';\nimport Footer from '../components/footer';\nimport './model.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModelViewer = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n\n    // Initialize renderer\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.outputColorSpace = THREE.SRGBColorSpace;\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x000000);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Initialize scene\n    const scene = new THREE.Scene();\n\n    // Initialize camera\n    const camera = new THREE.PerspectiveCamera(45, width / height, 1, 1000);\n    camera.position.set(0, 10, 20);\n\n    // Orbit controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.enablePan = true;\n    controls.enableZoom = true;\n    controls.zoomSpeed = 1.0;\n    controls.rotateSpeed = 0.8;\n    controls.panSpeed = 0.8;\n    controls.minDistance = 5;\n    controls.maxDistance = 50;\n    controls.autoRotate = false;\n\n    // Lighting\n    const spotLight = new THREE.SpotLight(0xffffff, 5000, 200, 0.5, 0.5);\n    spotLight.position.set(10, 30, 10);\n    spotLight.castShadow = true;\n    scene.add(spotLight);\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n\n    // Load GLTF model\n    const loader = new GLTFLoader().setPath('/path/to/your/model/');\n    loader.load('scene.gltf', gltf => {\n      const model = gltf.scene;\n      scene.add(model);\n\n      // Center the model\n      const box = new THREE.Box3().setFromObject(model);\n      const center = box.getCenter(new THREE.Vector3());\n      model.position.sub(center);\n\n      // Shadow settings\n      model.traverse(child => {\n        if (child.isMesh) {\n          child.castShadow = true;\n          child.receiveShadow = true;\n        }\n      });\n    }, xhr => console.log(xhr.loaded / xhr.total * 100 + '% loaded'), error => console.error(error));\n\n    // Resize handling\n    const onResize = () => {\n      renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n      camera.aspect = mountRef.current.clientWidth / mountRef.current.clientHeight;\n      camera.updateProjectionMatrix();\n    };\n    window.addEventListener('resize', onResize);\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Clean up on unmount\n    return () => {\n      renderer.dispose();\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100%',\n      height: '100vh'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 10\n  }, this);\n};\n_s(ModelViewer, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ModelViewer;\nexport default ModelViewer;\nvar _c;\n$RefreshReg$(_c, \"ModelViewer\");","map":{"version":3,"names":["React","useEffect","useRef","Fragment","THREE","GLTFLoader","OrbitControls","Link","Helmet","Navbar","Footer","jsxDEV","_jsxDEV","ModelViewer","_s","mountRef","width","current","clientWidth","height","clientHeight","renderer","WebGLRenderer","antialias","outputColorSpace","SRGBColorSpace","setSize","setClearColor","setPixelRatio","window","devicePixelRatio","shadowMap","enabled","type","PCFSoftShadowMap","appendChild","domElement","scene","Scene","camera","PerspectiveCamera","position","set","controls","enableDamping","dampingFactor","enablePan","enableZoom","zoomSpeed","rotateSpeed","panSpeed","minDistance","maxDistance","autoRotate","spotLight","SpotLight","castShadow","add","ambientLight","AmbientLight","loader","setPath","load","gltf","model","box","Box3","setFromObject","center","getCenter","Vector3","sub","traverse","child","isMesh","receiveShadow","xhr","console","log","loaded","total","error","onResize","aspect","updateProjectionMatrix","addEventListener","animate","requestAnimationFrame","update","render","dispose","removeEventListener","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Swastik R/Downloads/Software_engineering_project-Development/Software_engineering_project-Development/src/views/model.js"],"sourcesContent":["import React, { useEffect, useRef , Fragment} from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n\nimport { Link } from 'react-router-dom'\n\nimport { Helmet } from 'react-helmet'\n\nimport Navbar from '../components/navbar'\nimport Footer from '../components/footer'\nimport './model.css'\nconst ModelViewer = () => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n      const width = mountRef.current.clientWidth;\n      const height = mountRef.current.clientHeight;\n\n      // Initialize renderer\n      const renderer = new THREE.WebGLRenderer({ antialias: true });\n      renderer.outputColorSpace = THREE.SRGBColorSpace;\n      renderer.setSize(width, height);\n      renderer.setClearColor(0x000000);\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.shadowMap.enabled = true;\n      renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n      mountRef.current.appendChild(renderer.domElement);\n\n      // Initialize scene\n      const scene = new THREE.Scene();\n\n      // Initialize camera\n      const camera = new THREE.PerspectiveCamera(45, width / height, 1, 1000);\n      camera.position.set(0, 10, 20);\n\n      // Orbit controls\n      const controls = new OrbitControls(camera, renderer.domElement);\n      controls.enableDamping = true;\n      controls.dampingFactor = 0.05;\n      controls.enablePan = true;\n      controls.enableZoom = true;\n      controls.zoomSpeed = 1.0;\n      controls.rotateSpeed = 0.8;\n      controls.panSpeed = 0.8;\n      controls.minDistance = 5;\n      controls.maxDistance = 50;\n      controls.autoRotate = false;\n\n      // Lighting\n      const spotLight = new THREE.SpotLight(0xffffff, 5000, 200, 0.5, 0.5);\n      spotLight.position.set(10, 30, 10);\n      spotLight.castShadow = true;\n      scene.add(spotLight);\n\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n      scene.add(ambientLight);\n\n      // Load GLTF model\n      const loader = new GLTFLoader().setPath('/path/to/your/model/');\n      loader.load(\n          'scene.gltf',\n          (gltf) => {\n              const model = gltf.scene;\n              scene.add(model);\n\n              // Center the model\n              const box = new THREE.Box3().setFromObject(model);\n              const center = box.getCenter(new THREE.Vector3());\n              model.position.sub(center);\n\n              // Shadow settings\n              model.traverse((child) => {\n                  if (child.isMesh) {\n                      child.castShadow = true;\n                      child.receiveShadow = true;\n                  }\n              });\n          },\n          (xhr) => console.log((xhr.loaded / xhr.total) * 100 + '% loaded'),\n          (error) => console.error(error)\n      );\n\n      // Resize handling\n      const onResize = () => {\n          renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n          camera.aspect = mountRef.current.clientWidth / mountRef.current.clientHeight;\n          camera.updateProjectionMatrix();\n      };\n      window.addEventListener('resize', onResize);\n\n      // Animation loop\n      const animate = () => {\n          requestAnimationFrame(animate);\n          controls.update();\n          renderer.render(scene, camera);\n      };\n      animate();\n\n      // Clean up on unmount\n      return () => {\n          renderer.dispose();\n          window.removeEventListener('resize', onResize);\n      };\n  }, []);\n\n  return <div ref={mountRef} style={{ width: '100%', height: '100vh' }} />;\n};\n\nexport default ModelViewer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}