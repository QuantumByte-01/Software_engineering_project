{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Swastik R\\\\Downloads\\\\Software_engineering_project-Development\\\\Software_engineering_project-Development\\\\src\\\\views\\\\survey.js\",\n  _s = $RefreshSig$();\n// Survey.js\nimport React, { useState, Fragment } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport Navbar from '../components/navbar';\nimport Footer from '../components/footer';\nimport './survey.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Survey = props => {\n  _s();\n  const [landscape, setLandscape] = useState('');\n  const [houseType, setHouseType] = useState('');\n  const [numRooms, setNumRooms] = useState('');\n  const history = useHistory();\n  const handleLandscapeChange = value => setLandscape(value);\n  const handleHouseTypeChange = value => setHouseType(value);\n  const handleNumRoomsChange = value => setNumRooms(value);\n  const handleSubmit = () => {\n    // Store answers to the survey questions\n    const surveyData = {\n      landscape,\n      houseType,\n      numRooms\n    };\n    localStorage.setItem('surveyData', JSON.stringify(surveyData)); // Save to localStorage\n    history.push('/model'); // Redirect to the model page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"survey-container1\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"survey-submit-button\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer /* Footer props */, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Survey, \"1Trou0wCr5LvRrWN6q4F9g7QxJY=\", false, function () {\n  return [useHistory];\n});\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useState","Fragment","Link","useHistory","Helmet","Navbar","Footer","jsxDEV","_jsxDEV","Survey","props","_s","landscape","setLandscape","houseType","setHouseType","numRooms","setNumRooms","history","handleLandscapeChange","value","handleHouseTypeChange","handleNumRoomsChange","handleSubmit","surveyData","localStorage","setItem","JSON","stringify","push","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Swastik R/Downloads/Software_engineering_project-Development/Software_engineering_project-Development/src/views/survey.js"],"sourcesContent":["// Survey.js\nimport React, { useState, Fragment } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\n\nimport Navbar from '../components/navbar'\nimport Footer from '../components/footer'\nimport './survey.css'\n\nconst Survey = (props) => {\n  const [landscape, setLandscape] = useState('')\n  const [houseType, setHouseType] = useState('')\n  const [numRooms, setNumRooms] = useState('')\n  const history = useHistory()\n\n  const handleLandscapeChange = (value) => setLandscape(value)\n  const handleHouseTypeChange = (value) => setHouseType(value)\n  const handleNumRoomsChange = (value) => setNumRooms(value)\n\n  const handleSubmit = () => {\n    // Store answers to the survey questions\n    const surveyData = { landscape, houseType, numRooms }\n    localStorage.setItem('surveyData', JSON.stringify(surveyData))  // Save to localStorage\n    history.push('/model') // Redirect to the model page\n  }\n\n  return (\n    <div className=\"survey-container1\">\n      {/* Render your UI here */}\n      <button type=\"button\" className=\"survey-submit-button\" onClick={handleSubmit}>\n        Submit\n      </button>\n      <Footer /* Footer props */ />\n    </div>\n  )\n}\n\nexport default Survey\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AACjD,SAASC,IAAI,EAAEC,UAAU,QAAQ,kBAAkB;AACnD,SAASC,MAAM,QAAQ,cAAc;AAErC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMkB,OAAO,GAAGf,UAAU,CAAC,CAAC;EAE5B,MAAMgB,qBAAqB,GAAIC,KAAK,IAAKP,YAAY,CAACO,KAAK,CAAC;EAC5D,MAAMC,qBAAqB,GAAID,KAAK,IAAKL,YAAY,CAACK,KAAK,CAAC;EAC5D,MAAME,oBAAoB,GAAIF,KAAK,IAAKH,WAAW,CAACG,KAAK,CAAC;EAE1D,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,MAAMC,UAAU,GAAG;MAAEZ,SAAS;MAAEE,SAAS;MAAEE;IAAS,CAAC;IACrDS,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACJ,UAAU,CAAC,CAAC,EAAE;IAChEN,OAAO,CAACW,IAAI,CAAC,QAAQ,CAAC,EAAC;EACzB,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAEhCvB,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAACF,SAAS,EAAC,sBAAsB;MAACG,OAAO,EAAEV,YAAa;MAAAQ,QAAA,EAAC;IAE9E;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT7B,OAAA,CAACF,MAAM,CAAC;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV,CAAC;AAAA1B,EAAA,CA1BKF,MAAM;EAAA,QAIMN,UAAU;AAAA;AAAAmC,EAAA,GAJtB7B,MAAM;AA4BZ,eAAeA,MAAM;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}